trigger:
  branches:
    include:
      - develop

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Tests
    displayName: "Run Linter, Tests, and SonarCloud Analysis"
    jobs:
      - job: Setup
        displayName: "Set up environment and install dependencies"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'

          # Instalar dependencias y definir variable de entorno para la ubicación del entorno de Python
          - script: |
              python -m pip install --upgrade pip
              pip install -r task_manager/requirements.txt
              echo "##vso[task.setvariable variable=PYTHON_SITE_PACKAGES]$(python -c 'import site; print(site.getsitepackages()[0])')"
            displayName: "Install dependencies and set path variable"

          # Publicar la ubicación del entorno de Python como un artefacto usando la variable de entorno definida
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(PYTHON_SITE_PACKAGES)'  # Usa la variable que contiene la ruta correcta
              artifact: 'python-env'
            displayName: "Publish Python environment"

      - job: Lint
        displayName: "Run linter"
        dependsOn: Setup  # Depender del job Setup para garantizar que las dependencias se han instalado
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'

          - script: |
              pip install flake8
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            displayName: "Run flake8 linter"

      - job: Tests
        displayName: "Run tests"
        dependsOn: Setup  # Depender del job Setup para reutilizar el entorno
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'

          - script: |
              pip install -r task_manager/requirements.txt
              pytest --junitxml=task_manager/test-results.xml --cov=task_manager
            displayName: "Install dependencies and run tests"

          - task: PublishTestResults@2
            inputs:
              testResultsFiles: '**/task_manager/test-results.xml'  # Asegúrate de que la ruta es correcta
              testRunTitle: 'Tests for Develop'
            displayName: "Publish test results"

      - job: SonarCloud
        displayName: "Analyze code with SonarCloud"
        dependsOn: Setup  # Asegurar que el entorno y dependencias están configurados
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'

          # Prepara el entorno para el análisis de SonarCloud
          - task: SonarCloudPrepare@2
            inputs:
              SonarCloud: 'SonarCloud'  # Reemplazar con el nombre de tu Service Connection
              organization: 'unisabaneta'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'unisabaneta_sag-unisabaneta'
              cliProjectName: 'SAG-UNISABANETA'
              cliSources: '.'
              extraProperties: |
                sonar.python.coverage.reportPaths=task_manager/test-results.xml

          # Instalar dependencias antes de correr el análisis de SonarCloud
          - script: |
              pip install -r task_manager/requirements.txt
            displayName: "Install dependencies"

          # Ejecuta el análisis de SonarCloud
          - task: SonarCloudAnalyze@2
            displayName: "Run SonarCloud analysis"

          # Publica los resultados del análisis de SonarCloud
          - task: SonarCloudPublish@2
            displayName: "Publish SonarCloud results"

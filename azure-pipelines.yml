trigger:
  branches:
    include:
      - develop

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Setup
    displayName: "Configurar Entorno"
    jobs:
      - job: Setup
        displayName: "Instalar Dependencias"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
          - script: |
              python -m venv task_manager/env
              source task_manager/env/bin/activate
              pip install -r task_manager/requirements.txt
              pip install pytest coverage  # Instalar pytest y coverage
            displayName: "Configurar entorno Python e instalar dependencias"

  - stage: Tests
    displayName: "Ejecutar Pruebas"
    dependsOn: Setup
    jobs:
      - job: Test
        displayName: "Ejecutar pruebas unitarias"
        steps:
          - script: |
              source task_manager/env/bin/activate
              coverage run -m pytest test/test_app.py
              coverage xml -o task_manager/coverage.xml
            displayName: "Ejecutar pruebas unitarias y generar reporte de cobertura"

  - stage: SonarCloudAnalysis
    displayName: "Análisis de SonarCloud"
    dependsOn: Tests
    jobs:
      - job: SonarCloud
        displayName: "Analizar código con SonarCloud"
        steps:
          - task: SonarCloudPrepare@2
            inputs:
              SonarCloud: 'SonarCloud'  # Reemplazar con tu Service Connection
              organization: 'unisabaneta'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'unisabaneta_sag-unisabaneta'
              cliProjectName: 'SAG-UNISABANETA'
              cliSources: '.'
              extraProperties: |
                sonar.python.version=3.x  # Especifica tu versión de Python
                sonar.coverage.reportPaths=task_manager/coverage.xml
          - task: SonarCloudAnalyze@2
            displayName: "Ejecutar análisis de SonarCloud"
          - task: SonarCloudPublish@2
            displayName: "Publicar resultados de SonarCloud"

  - stage: PublishArtifacts
    displayName: "Publicar Artefactos"
    dependsOn: SonarCloudAnalysis
    jobs:
      - job: Publish
        displayName: "Publicar Artefactos"
        steps:
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)'
              artifactName: 'build-artifacts'
              publishLocation: 'Container'
            displayName: "Publicar artefactos de compilación"